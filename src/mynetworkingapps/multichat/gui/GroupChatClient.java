/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mynetworkingapps.multichat.gui;
//import mynetworkingapps.multichat.gui.GroupChatClient.ChatThread;

import com.twilio.Twilio;
import com.twilio.rest.api.v2010.account.Message;
//import com.twilio.rest.lookups.v1.PhoneNumber;
import com.twilio.Twilio;
import com.twilio.rest.api.v2010.account.Message;
import com.twilio.type.PhoneNumber;
import java.awt.Color;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.util.Random;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author ABHIRAJ
 */
public class GroupChatClient extends javax.swing.JFrame {
    
    Random random = new Random();
    
    public static final String ACCOUNT_SID =
            "ACdae6c59aae455d8041cb6137cc5952c7";
    public static final String AUTH_TOKEN =
            "b7a2b083b8297617eebc3f08947afa87";
    
    InetAddress ia;
    Socket sock;
    PrintWriter pw;
    Scanner sc;
    String name;
    boolean flag=true;
    /**
     * Creates new form GroupChatClient
     */
    public GroupChatClient() {
        Twilio.init(ACCOUNT_SID, AUTH_TOKEN);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Connect");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("SEND");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter message :");

        jLabel2.setText("          CLIENT MODULE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
            .addGroup(layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        String str = jTextField1.getText();
        pw.println(name + " : " + str);
        pw.flush();
        jTextField1.setText("");
        jTextArea1.append("ME : " + str + "\n");
        int red = random.nextInt(255);
        int green = random.nextInt(255);
        int blue = random.nextInt(255);
        Color color = new Color(red, green, blue);
        jTextArea1.setForeground(color);
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
        boolean login = false;
        ia = InetAddress.getLocalHost();
        sock = new Socket(ia,2222);
        sc = new Scanner(sock.getInputStream());
        pw = new PrintWriter(sock.getOutputStream());
        boolean flag = false; 
        String str = "", dialogMsg = "Enter username", dialogHeader = "Sign In/Sign up";
        str = JOptionPane.showInputDialog(null,dialogMsg,dialogHeader,JOptionPane.PLAIN_MESSAGE);
        if(str == null || str.isEmpty()) {
            while(str == null || str.isEmpty()) {
                dialogMsg = "Enter a valid username";
                str = JOptionPane.showInputDialog(null,dialogMsg,dialogHeader,JOptionPane.PLAIN_MESSAGE);
            }
        } else {
            login = true;
            pw.println(str);
            pw.flush();
            flag = sc.nextBoolean();
            if(flag == false) {
                System.out.println("User found");
                dialogMsg = "Enter Password ";
                dialogHeader = "Authentication";
                while(true) {
                    str = JOptionPane.showInputDialog(null,dialogMsg,dialogHeader,JOptionPane.PLAIN_MESSAGE);
                    if(str == null || str.isEmpty()) {
                        login = false;
                        break;
                    }
                    pw.println(str);
                    pw.flush();
                    flag = sc.nextBoolean();
                    boolean secondFlag = sc.nextBoolean();
                    if(secondFlag == false) {
                        JOptionPane.showMessageDialog(null,"Can't create multiple sessions for a single user",
                                "Error!",JOptionPane.ERROR_MESSAGE);
                        login = false;
                    }
                    if(flag == true) {
                        Object[] options = { "RESET" , "CANCEL"};
                        int choice = JOptionPane.showOptionDialog(null,"Click on reset to reset Password", "Warning",
                                JOptionPane.DEFAULT_OPTION,JOptionPane.QUESTION_MESSAGE,null, options, options[0]);
                        if(choice == JOptionPane.YES_OPTION){
                            pw.println(true);
                            pw.flush();
                            String mobile = sc.next();
                            System.out.println("reset password");
                            int code = (int)((Math.random()*(9999-1000) + 1) + 1000);
                            mobile = "+91" + mobile;
                            //Sending otp using web api
                            Message message = Message
                            .creator(new PhoneNumber(mobile), // to
                            new PhoneNumber("+17576074703"), // from
                            "Otp for groupchat " + code)
                            .create();
            
                            System.out.println(message.getSid());
                            System.out.println("passcode : " + code);
                            
                            String otp = JOptionPane.showInputDialog(null,
                                    "Enter otp sent to ","Reset Password",JOptionPane.PLAIN_MESSAGE);
                            if(code == Integer.parseInt(otp)) {
                                System.out.println("OTP Matched");
                                str = JOptionPane.showInputDialog(null,dialogMsg,dialogHeader,JOptionPane.PLAIN_MESSAGE);
                                while(str == null || str.isEmpty()) {
                                    dialogMsg = "Password can not be empty";
                                    str = JOptionPane.showInputDialog(null,dialogMsg,dialogHeader,JOptionPane.PLAIN_MESSAGE);
                                }
                                pw.println(true);
                                pw.flush();
                                pw.println(str);
                                pw.flush();
                            }
                            else {
                                JOptionPane.showMessageDialog(null,"Incorrect otp","Authentication Failed",JOptionPane.ERROR_MESSAGE);
                                pw.println(false);
                                pw.flush();
                                login = false;
                                break;
                            }
                        } else {
                            pw.println(false);
                            pw.flush();
                            System.out.println("dont want to reset password");
                        }
                    } else
                        break;
                }
            } else {
                //Creating a new user
                System.out.println("User Created");
                dialogMsg = "Enter a new Password ";
                dialogHeader = "Create Password";
                str = JOptionPane.showInputDialog(null,dialogMsg,dialogHeader,JOptionPane.PLAIN_MESSAGE);
                while(str == null || str.isEmpty()) {
                    dialogMsg = "Password can not be empty";
                    str = JOptionPane.showInputDialog(null,dialogMsg,dialogHeader,JOptionPane.PLAIN_MESSAGE);
                }     
                pw.println(str);
                pw.flush(); 
                String mobile = JOptionPane.showInputDialog(null,"Enter mobile no : +91","Recovery option",JOptionPane.PLAIN_MESSAGE);
//                if(str.length() != 10 || str == null || str.isEmpty()) {
//                    System.out.println("Error in length or null value");
                if(!(mobile == null || mobile.isEmpty())) {
                    pw.println(mobile);
                    pw.flush();
                } else {
                    pw.println("9425635869");
                    pw.flush();
                }    
            }
        }
        if(login == true) {
            jLabel3.setText("User Logged in as : " + str);
            jTextField1.setEnabled(true);
            name = str;
            jButton1.setEnabled(false);
            ChatThread chatThread = new ChatThread();
            chatThread.start();
            }
        }
        catch(Exception e) { 
            System.out.println(e); 
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here
        String str = jTextField1.getText();
        pw.println(name + " : " + str);
        pw.flush();
        jTextField1.setText("");
        jTextArea1.append("ME : " + str + "\n");
        int red = random.nextInt(255);
        int green = random.nextInt(255);
        int blue = random.nextInt(255);
        Color color = new Color(red, green, blue);
        jTextArea1.setForeground(color);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(pw != null) {
        pw.println("quit");
        pw.flush();
        }
        else {
            pw.close();
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GroupChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GroupChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GroupChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GroupChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GroupChatClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

class ChatThread extends Thread {
            public void run() {
                jTextArea1.append("Connected to Server at port 2222\n");
                String str;
                while(true) {
                    str = sc.nextLine();
                    if(str.equals("quit"))
                        break;
                    jTextArea1.append(str + "\n");
                }
            }
        } 
}
